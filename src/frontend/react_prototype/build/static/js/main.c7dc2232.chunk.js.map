{"version":3,"sources":["reducers/reducers.js","reducers/index.js","actions/index.js","components/Header.js","components/InputFields.js","components/Form.js","index.js","localStorage.js"],"names":["defaultFormState","textfield","name","value","error","levelfield","datefield","textarea","reducers","combineReducers","formState","state","arguments","length","undefined","action","type","Object","assign","defineProperty","id","input","page","user","username","setError","withStyles","root","flexGrow","grow","menuButton","marginLeft","marginRight","props","classes","react_default","a","createElement","className","AppBar_default","position","Toolbar_default","IconButton_default","color","aria-label","index_es","Typography_default","variant","styles","theme","container","display","flexWrap","textField","spacing","unit","width","SkillNameInput","TextField_default","required","label","data","margin","onChange","evt","target","DateInput","InputLabelProps","shrink","TextArea","multiline","rows","LevelPicker","radio_btns","map","i","Radio_default","key","checked","title","levelPicker","LabelField","padding","marginTop","textAlign","Paper_default","elevation","component","Form","_this","this","labels","keys","inputs","console","log","_this2","Button_default","onClick","onReset","onSubmit","renderLabels","Component","App","store","dispatch","updateInput","submit","switchPage","Header","Form_Form","handleChange","handleSubmit","handleResetForm","render","ReactDOM","src_App","getState","document","getElementById","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","createStore","reducer","subscribe","stringify","setItem","saveState"],"mappings":"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","file":"static/js/main.c7dc2232.chunk.js","sourcesContent":["//default map for clean input fields\nconst defaultFormState = {\n    textfield: {\n        name: \"Skill\",\n        value: \"\",\n        error: false\n    },\n    levelfield: {\n        name: \"Level\",\n        value: \"\",\n        error: false\n    },\n    datefield: {\n        name: \"Date\",\n        value: \"\",\n        error: false\n    },\n    textarea: {\n        name: \"Note\",\n        value: \"\",\n        error: false\n    }\n};\n\n//has all the data for the inputfields\nexport const formState = (state = defaultFormState, action) => {\n    switch(action.type){\n\n        //return new state, where only the one value of the certain input field has changed to action.input\n        case 'UPDATEINPUT':\n            return Object.assign({}, state, {\n                [action.id]: Object.assign({}, state[action.id], {value: action.input})\n            });\n\n        //return new state, where input field with action.id has a new bool\n        case 'SETERROR':\n            return Object.assign({}, state, {\n                [action.id]: Object.assign({}, state[action.id], {error: action.error})\n            });\n\n        case 'RESETFORM':\n            return defaultFormState;\n\n        default:\n            return state;\n    }\n}\n\n//at the moment this only saves the username\nexport const user = (state = \"Valdemar Forsberg\", action) => {\n    switch(action.type){\n        case 'UPDATEUSERNAME':\n            return action.username;\n    \n        default: \n            return state;\n    }\n}\n\n//defines which page is viewed to the user\nexport const page = (state = \"form\", action) => {\n    switch(action.type){\n        case 'SWITCHPAGE':\n            return action.page;\n        default: \n            return state;\n    }\n}","// reducers >> index.js\nimport { combineReducers } from 'redux';\nimport {formState, user, page} from './reducers';\n\nexport default combineReducers({\n    formState,\n    page,\n    user\n})","// actions >> index.js\n\nexport const updateInput = (id, input) => ({\n    type: \"UPDATEINPUT\",\n    id: id,\n    input: input\n});\n\nexport const setError = (id, error) => ({\n    type: \"SETERROR\",\n    id: id,\n    error: error\n})\n\nexport const switchPage = (page) => ({\n    type: \"SWITCHPAGE\",\n    page: page\n});\n\nexport const resetForm = () => ({\n    type: \"RESETFORM\",\n});","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport {AccountCircle, PowerSettingsNew} from '@material-ui/icons';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n};\n\nfunction ButtonAppBar(props) {\n  const { classes } = props;\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\n            <AccountCircle />\n          </IconButton>\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n            {props.username}\n          </Typography>\n          <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\n            <PowerSettingsNew />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nButtonAppBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ButtonAppBar);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Radio from '@material-ui/core/Radio';\n\nconst styles = theme => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    textField: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n      width: \"500px\",\n    },\n    error: {\n        color: \"red\"\n    }\n  });\n\nexport const SkillNameInput = withStyles(styles)(\n    (props) => {\n        const {classes} = props;\n        const id = 'textfield';\n\n        return(\n            <TextField\n                required\n                id=\"outlined-required\"\n                type = \"text\"\n                label={props.data.name}\n                value={props.data.value}\n                className={classes.textField + \" \" + props.data.name}\n                error={props.data.error}\n                margin=\"normal\"\n                variant=\"outlined\"\n                onChange={(evt)=>props.onChange(id, evt.target.value)}\n            />\n        )\n    }\n);\n\n\nexport const DateInput = withStyles(styles)(\n    (props) => {\n        const {classes} = props;\n        const id = 'datefield';\n\n        return(\n            <TextField\n                required\n                id=\"outlined-required\"\n                type = \"date\"\n                label={props.data.name}\n                value={props.data.value}\n                className={classes.textField + \" \" + props.data.name}\n                error={props.data.error}\n                margin=\"normal\"\n                variant=\"outlined\"\n                InputLabelProps={{\n                    shrink: true,\n                }}\n                onChange={(evt)=>props.onChange(id, evt.target.value)}\n            />\n        )\n    }\n);\n\nexport const TextArea = withStyles(styles)(\n    (props) => {\n        const {classes} = props;\n        const id = 'textarea';\n        \n        return(\n            <TextField\n                required\n                multiline\n                rows=\"4\"\n                label={props.data.name}\n                value={props.data.value}\n                className={classes.textField + \" \" + props.data.name}\n                error={props.data.error}\n                margin=\"normal\"\n                variant=\"outlined\"\n                onChange={(evt)=>props.onChange(id, evt.target.value)}\n            />\n        )\n    }\n)\n\nexport const LevelPicker = withStyles(styles)(\n    (props) => {\n        const {classes} = props;\n        const id = \"levelfield\";\n        const numbers = [\n            \"1\",\"2\",\"3\",\"4\",\"5\"\n        ]\n        var className = \"\";\n        if (props.data.error){\n            className = classes.error;\n        }\n        \n        const radio_btns = numbers.map(\n            (value, i) => (\n                <Radio   \n                    key = {i}      \n                    checked = {props.data.value === value}\n                    onChange = {(evt)=>props.onChange(id, evt.target.value)}\n                    value = {value}\n                    aria-label = {\"Level \" + value}\n                    title = {\"Level \" + value}\n                    className = {className}\n                />\n            )\n        )\n        return (\n            <div className={classes.textField+\" \"+classes.levelPicker}>\n                {radio_btns}\n            </div>\n        )\n    }\n)","import React, {Component} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport {SkillNameInput, DateInput, TextArea, LevelPicker} from './InputFields';\n\nconst styles = theme => ({\n    root: {\n      padding: theme.spacing.unit * 2,\n      marginTop: theme.spacing.unit,\n      textAlign: \"left\",\n    },\n  });\n\nfunction Label(props){\n    const {classes} = props;\n\n    return (\n    <div>\n    <Paper className={classes.root} elevation={1}>\n        <Typography variant=\"h5\" component=\"h3\">\n        {props.value}\n        </Typography>\n        <Typography component=\"p\">\n        {props.name}\n        </Typography>\n    </Paper>\n    </div>\n    )\n}\n\nLabel.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst LabelField = withStyles(styles)(Label);\n\nexport default class Form extends Component {\n    renderLabels(){\n        let labels = \n            Object.keys(this.props.inputs).map(\n                (id, i) => (<LabelField key={i} name={this.props.inputs[id].name} value={this.props.inputs[id].value}/>)\n            )\n        console.log(Object.keys(this.props.inputs));\n        return labels;\n    }\n  render(){\n      if (this.props.page === \"form\"){\n          return(\n            <div className=\"form\">\n            \n            <SkillNameInput data={this.props.inputs.textfield} value={this.props.inputs.textfield.value} onChange={(id, value) => this.props.onChange(id, value)}/>\n            <LevelPicker data={this.props.inputs.levelfield} onChange={(id, value) => this.props.onChange(id, value)}/>\n            <DateInput data={this.props.inputs.datefield} value={this.props.inputs.datefield.value} onChange={(id, value) => this.props.onChange(id, value)}/>\n            <TextArea data={this.props.inputs.textarea} value={this.props.inputs.textarea.value} onChange={(id, value) => this.props.onChange(id, value)}/>\n            \n            <div className=\"button-container\">\n                <Button variant=\"contained\" color=\"primary\" onClick={() => this.props.onReset()}>\n                    Reset Form\n                </Button>\n                <Button variant=\"contained\" color=\"primary\" name=\"submit\" onClick={() => this.props.onSubmit(\"skill\")}>\n                    Show skill\n                </Button>\n                \n            </div>\n            </div>\n           )\n      }else{\n        return(\n            <div className=\"form\">\n            {this.renderLabels()}\n            <div className=\"button-container\">\n                <Button variant=\"contained\" color=\"primary\" name=\"submit\" onClick={() => this.props.onSubmit(\"form\")}>\n                    Edit skill\n                </Button>\n            </div>\n            </div>\n        );\n      }\n  }\n}","//import react\nimport React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\n\n//import redux\nimport { createStore } from 'redux';\nimport reducer from './reducers';\nimport {updateInput, switchPage, setError, resetForm} from './actions';\nimport { loadState, saveState} from './localStorage';\n\n//import page parts\nimport Header from './components/Header';\nimport Form from './components/Form';\n\nimport './index.css';\n\n\nclass App extends Component {\n\n    //user inputs something into an input field\n    handleChange(id, value){\n        if (this.props.state.formState[id].error){\n            store.dispatch(setError(id, false))\n        }\n        store.dispatch(updateInput(id, value));\n    }\n\n    //user clicks button to show form/labels\n    handleSubmit(page){\n        const inputs = this.props.state.formState;\n        var submit = true;\n        if (this.props.state.page === \"form\"){\n            for (var key in inputs){\n                var input = inputs[key];\n                if (input.value === \"\"){\n                    store.dispatch(setError(key, true));\n                    submit = false;\n                }else {\n                    store.dispatch(setError(key, false));\n                }\n            }\n        }\n        if (submit){\n            store.dispatch(switchPage(page));\n        }\n    }\n\n    //user wants to reset all input fields\n    handleResetForm(){\n        store.dispatch(resetForm());\n    }\n\n  render() {\n    return (\n        <div>\n            <Header username={this.props.state.user}/>\n            <main>\n                <h1>Neuen Skill erstellen</h1>\n                <Form inputs={this.props.state.formState} page={this.props.state.page} name=\"test\" onChange={(id, value) => this.handleChange(id, value)} onSubmit={(page) => this.handleSubmit(page)} onReset={() => this.handleResetForm()}/>\n            </main>\n        </div>\n    );\n  }\n}\n\n  // ========================================\n  \n  const render = () => {\n    ReactDOM.render(\n        <App state={store.getState()}/>,\n        document.getElementById('root')\n      );\n    console.log(\"State has been changed: \")\n    console.log(store.getState());\n  }\n\n\n// ==============================\n// state management with redux\nconst persistedState = loadState();\n\n\nconst store = createStore(\n    reducer,\n    persistedState\n);\n\n\nstore.subscribe(\n    () => \n    {\n        saveState(store.getState());\n    }\n);\nstore.subscribe(render);\n\nrender();\n","const itemName = \"state\";\n\nexport const loadState = () => {\n    try {\n        const serializedState = localStorage.getItem(itemName);\n        if (serializedState == null) {\n            return undefined;\n        }\n        return JSON.parse(serializedState);\n        \n    } catch (err)  {\n        console.log(\"Error: Could not load State from local storage\");\n        return undefined;\n    }\n};\n\nexport const saveState = (state) => {\n    try {\n        const serializedState = JSON.stringify(state);\n        localStorage.setItem(itemName, serializedState)\n    } catch (err) {\n        console.log(\"Error: Could not save state to local storage.\");\n    }\n};\n\nexport const deleteState = () => {\n    try {\n        localStorage.removeItem(itemName);\n    } catch (err) {\n        //ignore\n    }\n}"],"sourceRoot":""}